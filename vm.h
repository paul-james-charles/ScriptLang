//
// Created by paul on 27/05/2021.
//

#ifndef LOXCOMPILER_VM_H
#define LOXCOMPILER_VM_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PROJECT INCLUDES
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "chunk.h"
#include "value.h"
#include "table.h"
#include "object.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PUBLIC CONSTANTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define FRAMES_MAX 64
#define STACK_MAX (FRAMES_MAX * UINT8_COUNT)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PUBLIC TYPES
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct CallFrame {
    ObjClosure* closure;
    uint8_t* ip;
    Value* slots;
} CallFrame;

typedef struct VM {
    CallFrame frames[FRAMES_MAX];
    int frame_count;
    Value stack[STACK_MAX];
    Value* stack_top;
    Table globals;
    Table strings;
    ObjString* init_string;
    ObjUpvalue* open_upvalues;

    size_t bytes_allocated;
    size_t next_gc;
    Obj* objects;
    int gray_count;
    int gray_capacity;
    Obj** gray_stack;
} VM;

typedef enum InterpretResult {
    INTERPRET_OK,
    INTERPRET_COMPILE_ERROR,
    INTERPRET_RUNTIME_ERROR
} InterpretResult;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GLOBAL VARIABLE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern VM vm;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PUBLIC FUNCTION DECLARATIONS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void define_native(const char* name, NativeFn function);
void free_vm();
void init_vm();
InterpretResult interpret(const char* source);
Value pop();
void push(Value value);

#endif //LOXCOMPILER_VM_H
